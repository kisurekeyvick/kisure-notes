/** 
 * Web前端性能优化
 */

/** 
 * (1)理解减少http请求数量和减少请求资源大小两个优化要点
 * 
 * CS架构：本地开发代码 -> 发布到应用平台 -> ios或者安卓系统用户下载应用，部署代码于手机中运行
 * BS架构：本地开发代码 -> 发布到CDN或者远程服务器(webserver) -> 用户打开浏览器，输入相应的网址，
 *                                                            这个时候浏览器才会向远程服务器发出请求，动态的增量式的去加载静态资源
 * 所谓增量式：就是一点点加载资源，资源逐渐增多的过程
 * 
 * - http://mail.163.com/index.html这段url的解释：
 *      http://             这个是协议，也就是HTTP超文本传输协议，也就是网页在网上传输的协议
 *      mail                这个是服务器名
 *      163.com             这个是域名，是用来定位网站的独一无二的名字
 *      mail.163.com        这个是网站名，由服务器名+域名组成
 *      /                   这个是根目录，也就是说，通过网站名找到服务器，然后在服务器存放网页的根目录
 *      index.html          这个是根目录下的默认网页
 * 
 * - DNS
 *      DNS是进行域名和与之对应的IP地址转换的服务器。
 *      DNS中保存了一张域名和与之相对应的IP地址的表，以解析消息的域名。
 *      域名是Internet上某一台计算机或计算机组的名称，用于在数据传输时标识计算机的电子方位（有时也指地理位置）
 * 
 * - 浏览器的一个请求，从发送到返回都经历了什么？
 *   用户输入url，浏览器的核心代码会将url进行拆封解析，最终将domain发送到dns服务器上(domain就是域的意思)。
 *   dns服务器会根据domain查询相关主机(host)对应的IP地址，从而将ip传递给浏览器。
 *   浏览器拿到ip地址以后，就会知道会将请求发送到某个位置。于是跟随协议，将ip地址打在协议中，请求的相关参数都会在协议中存在
 *   然后发送到网络中去，经过局域网 -> 交换机 -> 路由器 -> 传递到主干网络 -> 然后到达服务端
 *   服务端是mvc架构的，请求先到controller中进行相关的逻辑处理，然后去调用我们的module层，module层是进行数据交互的
 *         然后再读取redis+db，获取到数据以后，最终将渲染好的view层返回给我们的网络
 * 
 * - CDN：https://www.jianshu.com/p/57433bc34659
 *      CDN，中文名称是内容分发网络，可以用来分发直播、点播、网页静态文件、小文件等等，
 *      几乎我们日常用到的互联网产品都是有CDN在背后提供支持。
 * 
 * - 可存在的优化：
 *      (1) 可以在浏览器层面将dns相关的信息进行一个缓存，这样返回dns的时间会减少很多（）
 *      (2) 网络请求的过程，选择使用cdn能够解决网络静态资源，但是对于一些接口是没法用cdn的（网络请求的过程走最近的网络环境）
 *      (3) 在服务端进行html的渲染，从而将html直接输出到浏览器中，而不是在浏览器中渲染（服务端渲染）
 *      (4) 减少http请求
 *      (5) 相同的静态资源缓存
 */


/** 
 * (2)掌握压缩与合并的原理
 * 
 * - 可存在的优化：
 *      减少http请求数量
 *      减少请求资源的大小
 * 
 * html压缩
 *      HTML代码压缩就是压缩这些在文本文件中有意义，但是在HTML中不显示的字符
 *      包括：空格，换行符等。还有其他一些意义字符如：HTML注释也可以被压缩
 * 
 * css压缩
 * js的压缩和混乱
 * 文件合并
 * 开启gzip 来更程度的减少http请求资源的大小
 */

/** 
 * (3)通过在线网站和fis3两种实现压缩与合并的方法
 * 
 */
