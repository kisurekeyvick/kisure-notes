/**
 * CSS 与 JS 阻塞 DOM 解析和渲染的原理
 * 
 * (1) CSS 是不会阻塞DOM的解析,css只会阻塞渲染,那么阻塞了页面解析其实是 JS
 *     关于 CSS，大家肯定都知道的是<link>标签放在头部性能会高一点，
 *     少一点人知道如果<script>与<link>同时在头部的话，<script>在上可能会更好。
 * 
 * (2) 不论是内联还是外链js都会阻塞后续dom的解析和渲染
 */

/** 
 * 当 HTML 解析器遇到一个 script 标记时，它会暂停构建 DOM，
 * 将控制权移交给 JavaScript 引擎；等 JavaScript 引擎运行完毕，浏览器会从中断的地方恢复 DOM 构建。
 * 
 * 这也就是为什么我们需要将script tag放在页面的底部。 /React APP一般会如此使用。
 * 因为React需要将整个APP 渲染到一个DOM节点上，如果放置在DOM之上，会造成React找不到该渲染的节点，
 * 从而报错
 * 
 * 我们一般不建议在render tree刚刚建立的时候，就使用JS去操作DOM，从而造成reflow，
 * 也就是说，希望JS不要成为render tree的一部分。
 * 这个时候，我们将<script> 放在页面靠下的部分就可以不阻塞页面的渲染。
 * 
 * 如果你的<script>是从CDN获取资源，那么等待的过程也会造成一定的阻塞。
 * 你可以将<script>加上 async，让它变为异步加载。
 */

/** 
 * css阻塞DOM渲染
 * 
 * 对于一个HTML文档来说，不管是内联还是外链的css，都会阻碍后续的dom渲染，但是不会阻碍后续dom的解析。
 */

/**
 * css为什么要放在HTML文档的<head>标签内
 * 
 * 如果把css文件引用放在HTML文档的底部，浏览器为了防止无样式内容闪烁，
 * 会在css文件下载并解析完毕之前什么都不显示，这也就会造成白屏现象。
 * 当css文件放在<head>中时，虽然css解析也会阻塞后续dom的渲染，但是在解析css的同时也在解析dom，
 * 所以等到css解析完毕就会逐步的渲染页面了。
 */

/** 
 * 如何优化css？
 * 因为Css的解析会阻塞页面的渲染，为了让页面尽早的呈现处理，那么就要避免一些无用的css文件。
 * 使用媒体查询可以让css文件只在必要的时候解析，进而避免不必需的渲染阻塞，加快页面呈现时间。
 */

